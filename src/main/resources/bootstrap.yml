# 개발용 yml
#spring:
#  cloud:
#    config:
#      uri: http://localhost:8888
#      name: user-service # yml 파일명 써주면 된다.
#  profiles:
#    active: dev
#  thymeleaf:
#    prefix: classpath:/templates/
#    suffix: .html
#    mode: HTML
#    encoding: UTF-8
#    check-template: true
#    cache: false

# 테스트용 yml
#spring:
#  cloud:
#    config:
#      uri: http://localhost:8888
#      name: user-service # yml 파일명 써주면 된다.
#  profiles:
#    active: dev
#  thymeleaf:
#    prefix: classpath:/templates/
#    suffix: .html
#    mode: HTML
#    encoding: UTF-8
#    check-template: true
#    cache: false


## 배포할 떄 해당하는 bootstrap.yml 옵션을 오픈시킨다.
#spring:
#  cloud:
#    config:
#      uri: http://config-service-backend-msa-config-server-1:8888
#      name: user-service # yml 파일명 써주면 된다.
#  profiles:
#    active: prod
#  thymeleaf:
#    prefix: classpath:/templates/
#    suffix: .html
#    mode: HTML
#    encoding: UTF-8
#    check-template: true
#    cache: false

## 배포
#
#spring:
#  cloud:
#    config:
#      uri: https://config.apps.sys.paas-ta-dev10.kr
#      name: user-service # yml 파일명 써주면 된다.
#  profiles:
#    active: prod
#  thymeleaf:
#    prefix: classpath:/templates/
#    suffix: .html
#    mode: HTML
#    encoding: UTF-8
#    check-template: true
#    cache: false